//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "MainPage.xaml.h"

void ::App1::MainPage::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///MainPage.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}


/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class App1::MainPage::MainPage_obj5_Bindings 
    : public ::XamlBindingInfo::XamlBindingsBase<::App1::OutputDisplay>
{
public:
    MainPage_obj5_Bindings()
    {
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 6:
                this->obj6 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
            case 7:
                this->obj7 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
        }
    }

    void ResetTemplate()
    {
    }

    int ProcessBindings(::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs^ args)
    {
        int nextPhase = -1;
        switch(args->Phase)
        {
            case 0:
                nextPhase = -1;
                this->SetDataRoot(static_cast<::App1::OutputDisplay^>(args->Item));
                if (this->_dataContextChangedToken.Value != 0)
                {
                    safe_cast<::Windows::UI::Xaml::FrameworkElement^>(args->ItemContainer->ContentTemplateRoot)->DataContextChanged -= this->_dataContextChangedToken;
                    this->_dataContextChangedToken.Value = 0;
                }
                this->_isInitialized = true;
                break;
        }
        this->Update_((::App1::OutputDisplay^) args->Item, (1 << args->Phase));
        return nextPhase;
    }
private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::TextBlock^ obj6;
    ::Windows::UI::Xaml::Controls::TextBlock^ obj7;

    // Update methods for each path node used in binding steps.
    void Update_(::App1::OutputDisplay^ obj, int phase)
    {
        if (obj != nullptr)
        {
            if ((phase & (NOT_PHASED | (1 << 0))) != 0)
            {
                this->Update_In(obj->In, phase);
                this->Update_Out(obj->Out, phase);
            }
        }
    }
    void Update_In(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj6, obj, nullptr);
        }
    }
    void Update_Out(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj7, obj, nullptr);
        }
    }
};

/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class App1::MainPage::MainPage_obj9_Bindings 
    : public ::XamlBindingInfo::XamlBindingsBase<::App1::VarDisplay>
{
public:
    MainPage_obj9_Bindings()
    {
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 10:
                this->obj10 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
            case 11:
                this->obj11 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
        }
    }

    void ResetTemplate()
    {
    }

    int ProcessBindings(::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs^ args)
    {
        int nextPhase = -1;
        switch(args->Phase)
        {
            case 0:
                nextPhase = -1;
                this->SetDataRoot(static_cast<::App1::VarDisplay^>(args->Item));
                if (this->_dataContextChangedToken.Value != 0)
                {
                    safe_cast<::Windows::UI::Xaml::FrameworkElement^>(args->ItemContainer->ContentTemplateRoot)->DataContextChanged -= this->_dataContextChangedToken;
                    this->_dataContextChangedToken.Value = 0;
                }
                this->_isInitialized = true;
                break;
        }
        this->Update_((::App1::VarDisplay^) args->Item, (1 << args->Phase));
        return nextPhase;
    }
private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::TextBlock^ obj10;
    ::Windows::UI::Xaml::Controls::TextBlock^ obj11;

    // Update methods for each path node used in binding steps.
    void Update_(::App1::VarDisplay^ obj, int phase)
    {
        if (obj != nullptr)
        {
            if ((phase & (NOT_PHASED | (1 << 0))) != 0)
            {
                this->Update_Name(obj->Name, phase);
                this->Update_Var(obj->Var, phase);
            }
        }
    }
    void Update_Name(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj10, obj, nullptr);
        }
    }
    void Update_Var(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj11, obj, nullptr);
        }
    }
};

/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class App1::MainPage::MainPage_obj12_Bindings 
    : public ::XamlBindingInfo::XamlBindingsBase<::App1::OutputDisplay>
{
public:
    MainPage_obj12_Bindings()
    {
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 13:
                this->obj13 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
        }
    }

    void ResetTemplate()
    {
    }

    int ProcessBindings(::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs^ args)
    {
        int nextPhase = -1;
        switch(args->Phase)
        {
            case 0:
                nextPhase = -1;
                this->SetDataRoot(static_cast<::App1::OutputDisplay^>(args->Item));
                if (this->_dataContextChangedToken.Value != 0)
                {
                    safe_cast<::Windows::UI::Xaml::FrameworkElement^>(args->ItemContainer->ContentTemplateRoot)->DataContextChanged -= this->_dataContextChangedToken;
                    this->_dataContextChangedToken.Value = 0;
                }
                this->_isInitialized = true;
                break;
        }
        this->Update_((::App1::OutputDisplay^) args->Item, (1 << args->Phase));
        return nextPhase;
    }
private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::TextBlock^ obj13;

    // Update methods for each path node used in binding steps.
    void Update_(::App1::OutputDisplay^ obj, int phase)
    {
        if (obj != nullptr)
        {
            if ((phase & (NOT_PHASED | (1 << 0))) != 0)
            {
                this->Update_Out(obj->Out, phase);
            }
        }
    }
    void Update_Out(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj13, obj, nullptr);
        }
    }
};

void ::App1::MainPage::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
        case 1:
            {
                ::Windows::UI::Xaml::Controls::Grid^ element1 = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::Grid^>(element1))->DragEnter += ref new ::Windows::UI::Xaml::DragEventHandler(this, (void (::App1::MainPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::DragEventArgs^))&MainPage::Grid_DragEnter);
            }
            break;
        case 2:
            {
                this->DirList = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
            }
            break;
        case 3:
            {
                this->CenterllistView = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
            }
            break;
        case 4:
            {
                this->CommandLine = safe_cast<::Windows::UI::Xaml::Controls::AutoSuggestBox^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::AutoSuggestBox^>(this->CommandLine))->KeyDown += ref new ::Windows::UI::Xaml::Input::KeyEventHandler(this, (void (::App1::MainPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::Input::KeyRoutedEventArgs^))&MainPage::AutoSuggestBox_KeyDown);
                (safe_cast<::Windows::UI::Xaml::Controls::AutoSuggestBox^>(this->CommandLine))->KeyUp += ref new ::Windows::UI::Xaml::Input::KeyEventHandler(this, (void (::App1::MainPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::Input::KeyRoutedEventArgs^))&MainPage::AutoSuggestBox_KeyUp);
                (safe_cast<::Windows::UI::Xaml::Controls::AutoSuggestBox^>(this->CommandLine))->TextChanged += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::Controls::AutoSuggestBox^, ::Windows::UI::Xaml::Controls::AutoSuggestBoxTextChangedEventArgs^>(this, (void (::App1::MainPage::*)
                    (::Windows::UI::Xaml::Controls::AutoSuggestBox^, ::Windows::UI::Xaml::Controls::AutoSuggestBoxTextChangedEventArgs^))&MainPage::CommandLine_TextChanged);
                (safe_cast<::Windows::UI::Xaml::Controls::AutoSuggestBox^>(this->CommandLine))->SuggestionChosen += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::Controls::AutoSuggestBox^, ::Windows::UI::Xaml::Controls::AutoSuggestBoxSuggestionChosenEventArgs^>(this, (void (::App1::MainPage::*)
                    (::Windows::UI::Xaml::Controls::AutoSuggestBox^, ::Windows::UI::Xaml::Controls::AutoSuggestBoxSuggestionChosenEventArgs^))&MainPage::CommandLine_SuggestionChosen);
                (safe_cast<::Windows::UI::Xaml::Controls::AutoSuggestBox^>(this->CommandLine))->QuerySubmitted += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::Controls::AutoSuggestBox^, ::Windows::UI::Xaml::Controls::AutoSuggestBoxQuerySubmittedEventArgs^>(this, (void (::App1::MainPage::*)
                    (::Windows::UI::Xaml::Controls::AutoSuggestBox^, ::Windows::UI::Xaml::Controls::AutoSuggestBoxQuerySubmittedEventArgs^))&MainPage::CommandLine_QuerySubmitted);
            }
            break;
        case 8:
            {
                this->listView1 = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
            }
            break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::App1::MainPage::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    ::XamlBindingInfo::XamlBindings^ bindings = nullptr;
    switch (__connectionId)
    {
        case 5:
            {
                ::Windows::UI::Xaml::Controls::StackPanel^ element5 = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
                MainPage_obj5_Bindings* objBindings = new MainPage_obj5_Bindings();
                objBindings->SetDataRoot(element5->DataContext);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                bindings->SubscribeForDataContextChanged(element5);
                ::Windows::UI::Xaml::DataTemplate::SetExtensionInstance(element5, bindings);
            }
            break;
        case 9:
            {
                ::Windows::UI::Xaml::Controls::StackPanel^ element9 = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
                MainPage_obj9_Bindings* objBindings = new MainPage_obj9_Bindings();
                objBindings->SetDataRoot(element9->DataContext);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                bindings->SubscribeForDataContextChanged(element9);
                ::Windows::UI::Xaml::DataTemplate::SetExtensionInstance(element9, bindings);
            }
            break;
        case 12:
            {
                ::Windows::UI::Xaml::Controls::StackPanel^ element12 = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
                MainPage_obj12_Bindings* objBindings = new MainPage_obj12_Bindings();
                objBindings->SetDataRoot(element12->DataContext);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                bindings->SubscribeForDataContextChanged(element12);
                ::Windows::UI::Xaml::DataTemplate::SetExtensionInstance(element12, bindings);
            }
            break;
    }
    return bindings;
}


